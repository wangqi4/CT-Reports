"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:","BA Setup OOC\BA Setup OOC.exe"
"EXCEL:","out_9363.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","0"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","0"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{SFGI Lot List}</@#;>SFGI Lot List"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_13}</@#;>SFGI CT Data"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_14}</@#;>SFGI CT Data1"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_4}</@#;>SFGI CT Data2"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_6}</@#;>SFGI CT Data3"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_8}</@#;>SFGI CT Data4"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_7}</@#;>SFGI CT Data5"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_9}</@#;>SFGI CT Data6"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{SFGI Lot Final CT}</@#;>SFGI Lot Final CT"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_5}</@#;>PrePostQuery_5"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","-99"
"QUERYGRID:"
"JOINGRID:"
"FILTERGRID:"
/START_EMBED_ALL
/EMBED=VG2;SFGI Lot Final CT
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","SFGILot_finalCT.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","9"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","9"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CT_Data.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col5"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col2"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col4"
"f(x)->ct","ct","Y","None","Avg","Row","f","ct","csv","SQL->CASE WHEN a0.[ct] = '' THEN NULL ELSE CAST (a0.[ct] AS REAL) END","col3"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col6"
"a0.maincell","maincell","Y","None","None","Row","c","","csv","SQL->a0.[maincell]","col8"
"a0.subcell","subcell","Y","None","None","Row","c","","csv","SQL->a0.[subcell]","col7"
"f(x)->CASE WHEN  {maincell} like 'CELL%' THEN  {maincell}  ||  SUBSTR( {subcell} ,-1,1) ELSE   {subcell}  END","subcell_1","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col8} like 'CELL%' THEN  {col8}  ||  SUBSTR( {col7} ,-1,1) ELSE   {col7}  END","col9"
"JOINGRID:"
"FILTERGRID:"





















/END_EMBED
/EMBED=VG2;SFGI Lot List
"VERSION:","1.0"
"OUTERJOIN:","No"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Lotlist.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","31"
"JOINROWS:","4"
"FILTERROWS:","10"
"COL_ID_COUNTER:","36"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","Default"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","Default"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:0:a2"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","Default"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.lot","lot","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a0->f0.lot","col1"
"a0.operation","operation","Y","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a0->f0.operation","col2"
"a0.quantity","quantity","Y","None","None","Row","n","The current number of units or wafers or panels in the lot","f_lot","a0->f0.qty1","col3"
"a0.owner","owner","Y","None","None","Row","c","Identifies the owner of the lot. Valid values include: ENG, PROD, TW. This maps to MES300 LotTypes","f_lot","a0->f0.owner","col4"
"a0.onhold","onhold","Y","None","None","Row","c","Flag indicating if the lot is currently on hold. Y means the lot is on hold and N means the lot is not on hold.","f_lot","a0->f0.onhold","col5"
"a0.at_phq","at_phq","Y","None","None","Row","c","Y if a lot is PHQed in Assembly/Test, else N","f_lot","a0->decode(f0.create_data1, NULL, 'N', 'Y')","col6"
"a0.at_shippable1","at_shippable1","Y","None","None","Row","c","Assembly/Test shippable flag for MRB 1","f_lot","a0->CASE WHEN SUBSTR(f0.create_data1, 1, 1) IN (7,6,5,4) THEN 'N' ELSE 'Y' END","col7"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a0->p.prodgroup3","col8"
"a0.product","product","Y","None","None","Row","c","The current product associated with the lot","f_lot","a0->f0.product","col32"
"a0.movein_date","movein_date","Y","None","None","Row","d","The date and time the lot was moved into the current operation. Usually denotes when processing started on the lot","f_lot","a0->f0.movein_date","col31"
"a1.lot","lot_1","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a1->f0.lot","col9"
"a1.operation","operation_1","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a1->f0.operation","col10"
"a1.prevout_date","prevout_date","Y","None","None","Row","d","The date and time the lot arrived at or was created at the current operation. This is typically the date and time the lot was moved out of the previous operation.","f_lothist","a1->f0.prevout_date","col13"
"a1.in_date","in_date","Y","None","None","Row","d","The date and time the lot was moved into the operation using the MVIN transaction. Equals zero (0) if th elot was not moved in.","f_lothist","a1->f0.in_date","col11"
"a1.out_date","out_date","Y","None","None","Row","d","The date the lot moved out of the operation. If the lot has not moved out, the value will be NULL. This column is used in date indices instead of Last_Action_Date as Last_Action_Date changes for every transaction for the lot at the operation.","f_lothist","a1->f0.out_date","col12"
"a1.transaction","transaction","Y","None","None","Row","c","A transaction identifier. E.g., HLLT, RLLT","f_lottxnhist","a1->f5.transaction","col35"
"a1.prodgroup3","prodgroup3_1","Y","None","None","Row","c","Product Classification column.","f_product","a1->p.prodgroup3","col14"
"a1.txn_from_to_lot","txn_from_to_lot","Y","None","None","Row","c","For transactions that affect more than one lot, stores the other lot involved in the transaction. E.g., the child lot for a Split lot transaction or the parent lot for a Merge Lot transaction.","f_lottxnhist","a1->f5.from_to_lot","col15"
"a1.from_to","from_to","Y","None","None","Row","c","Indicates if the transaction (is for FROM data or TO data. A value of F indicates FROM data (e.g., data was received from an old facility). A value of T indicates TO data, (E.g., a lot was shipped to a new facility).","f_lottxnhist","a1->f5.from_to","col16"
"a2.lot","lot_2","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a2->f0.lot","col17"
"a2.operation","operation_2","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a2->f0.operation","col18"
"a2.prevout_date","prevout_date_1","Y","None","None","Row","d","The date and time the lot arrived at or was created at the current operation. This is typically the date and time the lot was moved out of the previous operation.","f_lothist","a2->f0.prevout_date","col19"
"a2.in_date","in_date_1","Y","None","None","Row","d","The date and time the lot was moved into the operation using the MVIN transaction. Equals zero (0) if th elot was not moved in.","f_lothist","a2->f0.in_date","col20"
"a2.out_date","out_date_1","Y","None","None","Row","d","The date the lot moved out of the operation. If the lot has not moved out, the value will be NULL. This column is used in date indices instead of Last_Action_Date as Last_Action_Date changes for every transaction for the lot at the operation.","f_lothist","a2->f0.out_date","col21"
"a2.prodgroup3","prodgroup3_2","Y","None","None","Row","c","Product Classification column.","f_product","a2->p.prodgroup3","col22"
"a2.txn_from_to_lot","txn_from_to_lot_1","Y","None","None","Row","c","For transactions that affect more than one lot, stores the other lot involved in the transaction. E.g., the child lot for a Split lot transaction or the parent lot for a Merge Lot transaction.","f_lottxnhist","a2->f5.from_to_lot","col26"
"f(x)->MIN ( {out_date_1} ) OVER (PARTITION BY  {lot_2}  )","first_location_outdate","Y","None","None","Row","H","***","f_lothist","All->MIN ( {col21} ) OVER (PARTITION BY  {col17}  )","col30"
"f(x)->CASE WHEN   {operation_2} =1204  THEN 1 ELSE 0 END","indicator","Y","None","None","Row","N","***","@if@1","All->CASE WHEN   {col18} =1204  THEN 1 ELSE 0 END","col27"
"f(a0)->Subcel","Subcel","Y","None","None","Row","x","***Lot attribute (1834)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1834 AND la.src_erase_date IS NULL AND rownum <= 1)","col33"
"f(a0)->Maincell","Maincell","Y","None","None","Row","x","***Lot attribute (1833)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1833 AND la.src_erase_date IS NULL AND rownum <= 1)","col34"
"f(x)->CASE WHEN  {lot}= {txn_from_to_lot}   THEN 'N'  !!!!!WHEN  {lot}=  {txn_from_to_lot_1} THEN 'N'  !!!!!WHEN   {txn_from_to_lot} =  {txn_from_to_lot_1} THEN 'N'  !!!!!ELSE 'Y' END","filter2","Y","None","None","Row","C","***","f_lottxnhist","All->CASE WHEN  {col1}= {col15}   THEN 'N'  !!!!!WHEN  {col1}=  {col26} THEN 'N'  !!!!!WHEN   {col15} =  {col26} THEN 'N'  !!!!!ELSE 'Y' END","col36"
"JOINGRID:"
"","","View->a0.lot                                                                                                    : a0->{col1}","=","View->a1.lot                                                                                                    : a1->{col9}",""
"","","View->a0.prodgroup3                                                                                                    : a0->{col8}","=","View->a1.prodgroup3                                                                                                    : a1->{col14}",""
"","","View->a1.txn_from_to_lot                                                                                                    : a1->{col15}","=","View->a2.lot                                                                                                    : a2->{col17}",""
"","","View->a1.prodgroup3                                                                                                    : a1->{col14}","=","View->a2.prodgroup3                                                                                                    : a2->{col22}",""
"FILTERGRID:"
"AND","","a0.terminated","=","'N'","","","c","f_lot","a0->f0.terminated",""
"-- AND","","a0.quantity","<=","300","","","n","f_lot","a0->f0.qty1",""
"AND","","a0.src_erase_date","Is Null","","","","d","f_lot","a0->f0.src_erase_date",""
"AND","","a0.operation","=","'7600'","","","c","f_lot","a0->f0.operation",""
"AND","","a0.owner","=","'PROD'","","","c","f_lot","a0->f0.owner",""
"AND","","a0.at_phq","=","'N'","","","c","f_lot","a0->decode(f0.create_data1, NULL, 'N', 'Y')",""
"AND","","a1.lot","In Temp"," {View (a0)} : View->a0.lot","",".","c","f_lothist","a1->f0.lot","a0->{col1}"
"AND","","a2.lot","In Temp"," {View (a1)} : View->a1.txn_from_to_lot","",".","c","f_lothist","a2->f0.lot","a1->{col15}"
"AND","","f(x)->{filter2}","=","'Y'","","","cx","@IF@1","All->{col36}",""
"AND","","a0.lot","In","'V245D866'</comma\>'V246E564'</comma\>'V244E733'</comma\>'V247E904'</comma\>'V302C196'</comma\>'V302E764'</comma\>'V302E773'</comma\>'V249C193'</comma\>'V303C412'</comma\>'V248D864'</comma\>'V253B743'</comma\>'V302E870'</comma\>'V302B564'</comma\>'V302D726'</comma\>'V302E899'</comma\>'V253B569'</comma\>'V302C197'</comma\>'V253C020'</comma\>'V302D861'</comma\>'V302F091'</comma\>'V303C410'</comma\>'V247C163'</comma\>'V302E105'</comma\>'V302F338'</comma\>'V303C409'</comma\>'V302E762'</comma\>'V302F122'</comma\>'V303B954'</comma\>'V303E536'</comma\>'V304D119'</comma\>'V305B947'</comma\>'V303B955'</comma\>'V303D740'</comma\>'V248C763'</comma\>'V303C839'</comma\>'V302E167'</comma\>'V303F211'</comma\>'V301B834'</comma\>'V303B759'</comma\>'V303E814'</comma\>'V250D323'</comma\>'V303F264'</comma\>'V245E287'</comma\>'V246E181'</comma\>'V247D209'</comma\>'V247D255'</comma\>'V246G288'</comma\>'V251D189'</comma\>'V302D158'</comma\>'V248D996'</comma\>'V302E790'</comma\>'V250D813'</comma\>'V302D792'</comma\>'V251C418'</comma\>'V302D791'</comma\>'V302E788'</comma\>'V302F518'</comma\>'V303B679'</comma\>'V303F512'</comma\>'V303B680'</comma\>'V303F513'</comma\>'V247F450'</comma\>'V303D397'</comma\>'V303F526'</comma\>'V303D360'</comma\>'V303D396'</comma\>'V303F511'</comma\>'V248D015'</comma\>'V303F525'</comma\>'V303C199'</comma\>'V304C876'</comma\>'V250D038'</comma\>'V304D191'</comma\>'V305C960'</comma\>'V250D039'</comma\>'V253B374'</comma\>'V303C823'</comma\>'V305C539'</comma\>'V250C756'</comma\>'V250C813'</comma\>'V250C755'</comma\>'V250C818'</comma\>'V250B325'</comma\>'V250C815'</comma\>'V248E677'</comma\>'V250C817'</comma\>'V251B936'</comma\>'V252D316'</comma\>'V251B291'</comma\>'V252D321'</comma\>'V253B258'</comma\>'V301A933'</comma\>'V253A677'</comma\>'V301A932'</comma\>'V252C983'</comma\>'V253B144'</comma\>'V301B442'</comma\>'V301D258'</comma\>'V302B395'</comma\>'V303D605'</comma\>'V304C243'</comma\>'V301B440'</comma\>'V301D787'</comma\>'V303F547'</comma\>'V305C136'</comma\>'V301C879'</comma\>'V303C937'</comma\>'V304D029'</comma\>'V301B438'</comma\>'V301D159'</comma\>'V303C936'</comma\>'V304C244'</comma\>'V301B609'</comma\>'V301C878'</comma\>'V301D260'</comma\>'V303D680'</comma\>'V305B968'</comma\>'V301B776'</comma\>'V301D259'</comma\>'V302B583'</comma\>'V302B619'</comma\>'V303D603'</comma\>'V303E718'</comma\>'V303E850'</comma\>'V303F056'</comma\>'V303E855'</comma\>'V303F057'</comma\>'V303E852'</comma\>'V303F060'</comma\>'V303E854'</comma\>'V303F061'</comma\>'V303E853'</comma\>'V303F058'</comma\>'V303E851'</comma\>'V303F059'</comma\>'V303E856'</comma\>'V303F062'</comma\>'V301C693'</comma\>'V303E222'</comma\>'V302D588'</comma\>'V303E575'</comma\>'V253C296'</comma\>'V301B595'</comma\>'V252D439'</comma\>'V253C292'</comma\>'V302B705'</comma\>'V303F365'</comma\>'V303C076'</comma\>'V303F455'</comma\>'V302C306'</comma\>'V304B910'</comma\>'V304C176'</comma\>'V302C656'</comma\>'V303D521'","",".","c","f_lot","a0->f0.lot",""

/END_EMBED
/EMBED=VG2;PrePostQuery_13
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CT_Data.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","15"
"JOINROWS:","0"
"FILTERROWS:","1"
"COL_ID_COUNTER:","21"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","Lotlist.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col3"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"a0.operation_1","operation_1","Y","None","None","Row","c","","csv","SQL->a0.[operation_1]","col20"
"a0.out_date","out_date","Y","None","None","Row","c","","csv","SQL->a0.[out_date]","col21"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col15"
"f(x)->movein_date","movein_date","Y","None","Min","Row","d","movein_date","csv","SQL->CASE WHEN a0.[movein_date] = '' THEN NULL ELSE CAST (a0.[movein_date] AS TEXT) END","col16"
"a0.txn_from_to_lot","mother_lot","Y","None","None","Row","c","","csv","SQL->a0.[txn_from_to_lot]","col5"
"a0.operation_2","operation_2","Y","None","None","Row","c","","csv","SQL->a0.[operation_2]","col6"
"f(x)->out_date_1","out_date_1","Y","None","None","Row","d","out_date_1","csv","SQL->CASE WHEN a0.[out_date_1] = '' THEN NULL ELSE CAST (a0.[out_date_1] AS TEXT) END","col9"
"f(x)->indicator","indicator","Y","None","None","Row","f","indicator","csv","SQL->CASE WHEN a0.[indicator] = '' THEN NULL ELSE CAST (a0.[indicator] AS REAL) END","col11"
"f(x)->SPF_FN$Date_Diff(     {out_date} , {out_date_1}  )","CT","Y","None","None","Row","F","***","s+1","SQL->SPF_FN$Date_Diff(     {col21} , {col9}  )","col12"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col17"
"a0.subcel","subcell","Y","None","None","Row","c","","csv","SQL->a0.[subcel]","col18"
"a0.maincell","maincell","Y","None","None","Row","c","","csv","SQL->a0.[maincell]","col19"
"JOINGRID:"
"FILTERGRID:"
"AND","","f(x)->indicator","=","1","","","f","csv","SQL->CASE WHEN a0.[indicator] = '' THEN NULL ELSE CAST (a0.[indicator] AS REAL) END",""



















/END_EMBED
/EMBED=VG2;PrePostQuery_14
"VERSION:","1.0"
"OUTERJOIN:","No"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CT_Data1.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","22"
"JOINROWS:","1"
"FILTERROWS:","3"
"COL_ID_COUNTER:","45"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","Lotlist.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col3"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"f(x)->movein_date","movein_date","Y","None","Min","Row","d","movein_date","csv","SQL->CASE WHEN a0.[movein_date] = '' THEN NULL ELSE CAST (a0.[movein_date] AS TEXT) END","col24"
"a0.txn_from_to_lot","mother_lot1","Y","None","None","Row","c","","csv","SQL->a0.[txn_from_to_lot]","col5"
"a0.operation_2","operation_1","P","None","None","Row","c","","csv","SQL->a0.[operation_2]","col6"
"f(x)->indicator","indicator","Y","None","None","Row","f","indicator","csv","SQL->CASE WHEN a0.[indicator] = '' THEN NULL ELSE CAST (a0.[indicator] AS REAL) END","col11"
"a0.txn_from_to_lot_1","mother_lot","Y","None","None","Row","c","","csv","SQL->a0.[txn_from_to_lot_1]","col15"
"f(x)->out_date_1","out_date_1","Y","None","None","Row","d","out_date_1","csv","SQL->CASE WHEN a0.[out_date_1] = '' THEN NULL ELSE CAST (a0.[out_date_1] AS TEXT) END","col37"
"f(x)->LENGTH( {txn_from_to_lot_1} )","len","P","None","None","Row","N","***","csv","SQL->LENGTH( {col15} )","col17"
"a1.lot","lot_1","P","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a1->f0.lot","col18"
"a1.operation","operation_2","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a1->f0.operation","col19"
"a1.in_date","in_date","Y","None","None","Row","d","The date and time the lot was moved into the operation using the MVIN transaction. Equals zero (0) if th elot was not moved in.","f_lothist","a1->f0.in_date","col20"
"a1.out_date","out_date","Y","None","None","Row","d","The date the lot moved out of the operation. If the lot has not moved out, the value will be NULL. This column is used in date indices instead of Last_Action_Date as Last_Action_Date changes for every transaction for the lot at the operation.","f_lothist","a1->f0.out_date","col21"
"a1.txn_from_to_lot","txn_from_to_lot","Y","None","None","Row","c","For transactions that affect more than one lot, stores the other lot involved in the transaction. E.g., the child lot for a Split lot transaction or the parent lot for a Merge Lot transaction.","f_lottxnhist","a1->f5.from_to_lot","col31"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col23"
"f(x)->SUM ( {indicator} ) OVER (PARTITION BY   {mother_lot1} )","filter","Y","None","None","Row","F","***","@if@1","SQL->SUM ( {col11} ) OVER (PARTITION BY   {col5} )","col16"
"a0.subcel","subcell","Y","None","None","Row","c","","csv","SQL->a0.[subcel]","col28"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col29"
"a0.maincell","maincell","Y","None","None","Row","c","","csv","SQL->a0.[maincell]","col30"
"f(x)->CASE WHEN     {operation_2} ='1204'  THEN 1 ELSE 0 END","indicator_1","Y","None","None","Row","C","***","f_lothist","All->CASE WHEN     {col19} ='1204'  THEN 1 ELSE 0 END","col44"
"f(x)->CASE WHEN  {mother_lot} = {txn_from_to_lot} THEN 'N'!!!!!  ELSE 'Y' END","filter2","Y","None","None","Row","C","***","f_lottxnhist","All->CASE WHEN  {col15} = {col31} THEN 'N'!!!!!  ELSE 'Y' END","col45"
"JOINGRID:"
"","","Sqlite->a0.txn_from_to_lot_1                                                                                                    : SQL->{col15}","=","View->a1.lot                                                                                                    : a1->{col18}",""
"FILTERGRID:"
"AND","","f(x)->{filter}","=","0","","","fx","@IF@2","SQL->{col16}",""
"AND","","a1.lot","In Temp"," {Sqlite (all)} : Sqlite->a0.txn_from_to_lot_1","",".","c","f_lothist","a1->f0.lot","SQL->{col15}"
"AND","","f(x)->{filter2}","=","'Y'","","","cx","@IF@1","All->{col45}",""



















/END_EMBED
/EMBED=VG2;PrePostQuery_4
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CT_Data2.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","13"
"JOINROWS:","0"
"FILTERROWS:","1"
"COL_ID_COUNTER:","27"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CT_Data1.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>CT_Data.tab<~> <~>CT_Data2.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col3"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"a0.out_date_1","out_date","Y","None","None","Row","c","","csv","SQL->a0.[out_date_1]","col22"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col15"
"a0.operation_2","operation_2","Y","None","None","Row","c","","csv","SQL->a0.[operation_2]","col6"
"f(x)->out_date_1","out_date_1","Y","None","None","Row","d","out_date_1","csv","SQL->CASE WHEN a0.[out_date] = '' THEN NULL ELSE CAST (a0.[out_date] AS TEXT) END","col23"
"a0.mother_lot","mother_lot","Y","None","None","Row","c","","csv","SQL->a0.[mother_lot]","col24"
"f(x)->SPF_FN$Date_Diff(      {out_date} ,   {out_date_1} )","CT","Y","None","None","Row","F","***","@if@1","SQL->SPF_FN$Date_Diff(      {col22} ,   {col23} )","col12"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col17"
"a0.maincell","maincell","Y","None","None","Row","c","","csv","SQL->a0.[maincell]","col19"
"a0.subcell","subcell","Y","None","None","Row","c","","csv","SQL->a0.[subcell]","col25"
"f(x)->indicator_1","indicator_1","Y","None","None","Row","f","indicator_1","csv","SQL->CASE WHEN a0.[indicator_1] = '' THEN NULL ELSE CAST (a0.[indicator_1] AS REAL) END","col26"
"JOINGRID:"
"FILTERGRID:"
"AND","","f(x)->indicator_1","=","1","","","f","csv","SQL->CASE WHEN a0.[indicator_1] = '' THEN NULL ELSE CAST (a0.[indicator_1] AS REAL) END",""



















/END_EMBED
/EMBED=VG2;PrePostQuery_5
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","out_13356.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","2"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","2"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CT_Data.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"f(x)->ct","ct","Y","None","Avg","Row","f","ct","csv","SQL->CASE WHEN a0.[ct] = '' THEN NULL ELSE CAST (a0.[ct] AS REAL) END","col2"
"JOINGRID:"
"FILTERGRID:"

















/END_EMBED
/EMBED=VG2;PrePostQuery_6
"VERSION:","1.0"
"OUTERJOIN:","No"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CT_Data3.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","21"
"JOINROWS:","1"
"FILTERROWS:","3"
"COL_ID_COUNTER:","68"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CT_Data1.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col3"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"f(x)->movein_date","movein_date","Y","None","Min","Row","d","movein_date","csv","SQL->CASE WHEN a0.[movein_date] = '' THEN NULL ELSE CAST (a0.[movein_date] AS TEXT) END","col24"
"f(x)->indicator_1","indicator_1","Y","None","None","Row","f","indicator_1","csv","SQL->CASE WHEN a0.[indicator_1] = '' THEN NULL ELSE CAST (a0.[indicator_1] AS REAL) END","col52"
"a0.mother_lot","mother_lot1","Y","None","None","Row","c","","csv","SQL->a0.[mother_lot]","col55"
"f(x)->out_date","out_date_olb","Y","None","None","Row","d","out_date","csv","SQL->CASE WHEN a0.[out_date] = '' THEN NULL ELSE CAST (a0.[out_date] AS TEXT) END","col65"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col23"
"f(x)->SUM (   {indicator_1} ) OVER (PARTITION BY       {mother_lot_1} )","filter","Y","None","None","Row","F","***","@if@1","SQL->SUM (   {col52} ) OVER (PARTITION BY       {col55} )","col16"
"a0.txn_from_to_lot","mother_lot","Y","None","None","Row","c","","csv","SQL->a0.[txn_from_to_lot]","col57"
"f(x)->out_date","out_date","Y","None","None","Row","d","out_date","csv","SQL->CASE WHEN a0.[out_date] = '' THEN NULL ELSE CAST (a0.[out_date] AS TEXT) END","col66"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col29"
"a0.maincell","maincell","Y","None","None","Row","c","","csv","SQL->a0.[maincell]","col30"
"f(x)->SUM (   {indicator_1} ) OVER (PARTITION BY       {mother_lot_1} )","filter_1","Y","None","None","Row","F","***","@if@1","SQL->SUM (   {col52} ) OVER (PARTITION BY       {col55} )","col46"
"a1.lot","lot_1","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a1->f0.lot","col47"
"a1.operation","operation_1","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a1->f0.operation","col48"
"a1.in_date","in_date","Y","None","None","Row","d","The date and time the lot was moved into the operation using the MVIN transaction. Equals zero (0) if th elot was not moved in.","f_lothist","a1->f0.in_date","col49"
"a1.txn_from_to_lot","txn_from_to_lot","Y","None","None","Row","c","For transactions that affect more than one lot, stores the other lot involved in the transaction. E.g., the child lot for a Split lot transaction or the parent lot for a Merge Lot transaction.","f_lottxnhist","a1->f5.from_to_lot","col68"
"a1.out_date","out_date1","Y","None","None","Row","d","The date the lot moved out of the operation. If the lot has not moved out, the value will be NULL. This column is used in date indices instead of Last_Action_Date as Last_Action_Date changes for every transaction for the lot at the operation.","f_lothist","a1->f0.out_date","col50"
"f(x)->CASE WHEN      {operation_1} ='1204'  THEN 1 ELSE 0 END","indicator","Y","None","None","Row","F","***","f_lothist","All->CASE WHEN      {col48} ='1204'  THEN 1 ELSE 0 END","col51"
"f(x)->CASE WHEN  {mother_lot} !=  {txn_from_to_lot}  THEN 'Y' ELSE 'N' END","filter1","Y","None","None","Row","C","***","f_lottxnhist","All->CASE WHEN  {col57} !=  {col68}  THEN 'Y' ELSE 'N' END","col67"
"JOINGRID:"
"","","Sqlite->a0.txn_from_to_lot                                                                                                    : SQL->{col57}","=","View->a1.lot                                                                                                    : a1->{col47}",""
"FILTERGRID:"
"AND","","f(x)->{filter_1}","=","0","","","fx","@IF@2","SQL->{col46}",""
"AND","","a1.lot","In Temp","{Sqlite (all)} : Sqlite->a0.txn_from_to_lot","",".","c","f_lothist","a1->f0.lot","SQL->{col57}"
"AND","","f(x)->{filter1}","=","'Y'","","","cx","@IF@1","All->{col67}",""




















/END_EMBED
/EMBED=VG2;PrePostQuery_7
"VERSION:","1.0"
"OUTERJOIN:","No"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CT_Data5.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","19"
"JOINROWS:","1"
"FILTERROWS:","3"
"COL_ID_COUNTER:","70"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CT_Data3.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col3"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"f(x)->movein_date","movein_date","Y","None","Min","Row","d","movein_date","csv","SQL->CASE WHEN a0.[movein_date] = '' THEN NULL ELSE CAST (a0.[movein_date] AS TEXT) END","col24"
"f(x)->indicator_2","indicator_1","Y","None","None","Row","f","indicator_2","csv","SQL->CASE WHEN a0.[indicator] = '' THEN NULL ELSE CAST (a0.[indicator] AS REAL) END","col70"
"a0.mother_lot","mother_lot1","Y","None","None","Row","c","","csv","SQL->a0.[mother_lot]","col55"
"f(x)->out_date1_1","out_date","Y","None","None","Row","d","out_date1_1","csv","SQL->CASE WHEN a0.[out_date1] = '' THEN NULL ELSE CAST (a0.[out_date1] AS TEXT) END","col69"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col23"
"a0.txn_from_to_lot","mother_lot","Y","None","None","Row","c","","csv","SQL->a0.[txn_from_to_lot]","col57"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col29"
"a0.maincell","maincell","Y","None","None","Row","c","","csv","SQL->a0.[maincell]","col30"
"f(x)->SUM (    {indicator_1} ) OVER (PARTITION BY        {mother_lot} )","filter_1","Y","None","None","Row","F","***","@if@1","SQL->SUM (    {col70} ) OVER (PARTITION BY        {col57} )","col46"
"a1.lot","lot_1","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a1->f0.lot","col47"
"a1.operation","operation_1","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a1->f0.operation","col48"
"a1.in_date","in_date","Y","None","None","Row","d","The date and time the lot was moved into the operation using the MVIN transaction. Equals zero (0) if th elot was not moved in.","f_lothist","a1->f0.in_date","col49"
"a1.txn_from_to_lot","txn_from_to_lot","Y","None","None","Row","c","For transactions that affect more than one lot, stores the other lot involved in the transaction. E.g., the child lot for a Split lot transaction or the parent lot for a Merge Lot transaction.","f_lottxnhist","a1->f5.from_to_lot","col68"
"a1.out_date","out_date1","Y","None","None","Row","d","The date the lot moved out of the operation. If the lot has not moved out, the value will be NULL. This column is used in date indices instead of Last_Action_Date as Last_Action_Date changes for every transaction for the lot at the operation.","f_lothist","a1->f0.out_date","col50"
"f(x)->CASE WHEN      {operation_1} ='1204'  THEN 1 ELSE 0 END","indicator","Y","None","None","Row","F","***","f_lothist","All->CASE WHEN      {col48} ='1204'  THEN 1 ELSE 0 END","col51"
"f(x)->CASE WHEN  {mother_lot} !=  {txn_from_to_lot}  THEN 'Y' ELSE 'N' END","filter1","Y","None","None","Row","C","***","f_lottxnhist","All->CASE WHEN  {col57} !=  {col68}  THEN 'Y' ELSE 'N' END","col67"
"JOINGRID:"
"","","Sqlite->a0.txn_from_to_lot                                                                                                    : SQL->{col57}","=","View->a1.lot                                                                                                    : a1->{col47}",""
"FILTERGRID:"
"AND","","f(x)->{filter_1}","=","0","","","fx","@IF@2","SQL->{col46}",""
"AND","","a1.lot","In Temp","{Sqlite (all)} : Sqlite->a0.txn_from_to_lot","",".","c","f_lothist","a1->f0.lot","SQL->{col57}"
"AND","","f(x)->{filter1}","=","'Y'","","","cx","@IF@1","All->{col67}",""




















/END_EMBED
/EMBED=VG2;PrePostQuery_8
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CT_Data4.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","10"
"JOINROWS:","0"
"FILTERROWS:","1"
"COL_ID_COUNTER:","38"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CT_Data3.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>CT_Data.tab<~> <~>CT_Data4.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col3"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col15"
"a0.mother_lot","mother_lot","Y","None","None","Row","c","","csv","SQL->a0.[mother_lot]","col24"
"f(x)->out_date","out_date","Y","None","None","Row","d","out_date","csv","SQL->CASE WHEN a0.[out_date] = '' THEN NULL ELSE CAST (a0.[out_date] AS TEXT) END","col37"
"f(x)->SPF_FN$Date_Diff(            {out_date} ,        {out_date1} )","CT","Y","None","None","Row","F","***","@if@1","SQL->SPF_FN$Date_Diff(            {col37} ,        {col38} )","col12"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col17"
"f(x)->indicator","indicator","Y","None","None","Row","f","indicator","csv","SQL->CASE WHEN a0.[indicator] = '' THEN NULL ELSE CAST (a0.[indicator] AS REAL) END","col28"
"f(x)->out_date1","out_date1","Y","None","None","Row","d","out_date1","csv","SQL->CASE WHEN a0.[out_date1] = '' THEN NULL ELSE CAST (a0.[out_date1] AS TEXT) END","col38"
"JOINGRID:"
"FILTERGRID:"
"AND","","f(x)->indicator","=","1","","","f","csv","SQL->CASE WHEN a0.[indicator] = '' THEN NULL ELSE CAST (a0.[indicator] AS REAL) END",""



















/END_EMBED
/EMBED=VG2;PrePostQuery_9
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CT_Data6.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","10"
"JOINROWS:","0"
"FILTERROWS:","1"
"COL_ID_COUNTER:","38"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CT_Data5.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>CT_Data.tab<~> <~>CT_Data6.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col3"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col15"
"a0.mother_lot","mother_lot","Y","None","None","Row","c","","csv","SQL->a0.[mother_lot]","col24"
"f(x)->out_date","out_date","Y","None","None","Row","d","out_date","csv","SQL->CASE WHEN a0.[out_date] = '' THEN NULL ELSE CAST (a0.[out_date] AS TEXT) END","col37"
"f(x)->SPF_FN$Date_Diff(            {out_date} ,        {out_date1} )","CT","Y","None","None","Row","F","***","@if@1","SQL->SPF_FN$Date_Diff(            {col37} ,        {col38} )","col12"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col17"
"f(x)->indicator","indicator","Y","None","None","Row","f","indicator","csv","SQL->CASE WHEN a0.[indicator] = '' THEN NULL ELSE CAST (a0.[indicator] AS REAL) END","col28"
"f(x)->out_date1","out_date1","Y","None","None","Row","d","out_date1","csv","SQL->CASE WHEN a0.[out_date1] = '' THEN NULL ELSE CAST (a0.[out_date1] AS TEXT) END","col38"
"JOINGRID:"
"FILTERGRID:"
"AND","","f(x)->indicator","=","1","","","f","csv","SQL->CASE WHEN a0.[indicator] = '' THEN NULL ELSE CAST (a0.[indicator] AS REAL) END",""


















/END_EMBED
/END_EMBED_ALL
